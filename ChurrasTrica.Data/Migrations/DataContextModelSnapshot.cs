// <auto-generated />
using System;
using ChurrasTrica.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ChurrasTrica.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("ChurrasTrica.Domain.Entities.ChurrasEntity", b =>
                {
                    b.Property<int>("ChurrasID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Observations")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Sem observações");

                    b.Property<decimal>("WithDrink")
                        .HasColumnType("money");

                    b.Property<decimal>("WithoutDrink")
                        .HasColumnType("money");

                    b.HasKey("ChurrasID");

                    b.ToTable("Churras");
                });

            modelBuilder.Entity("ChurrasTrica.Domain.Entities.UserEntity", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChurrasID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ContributionValue")
                        .HasColumnType("money");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("WithDrink")
                        .HasColumnType("money");

                    b.Property<bool>("WithoutDrink")
                        .HasColumnType("money");

                    b.HasKey("UserID");

                    b.HasIndex("ChurrasID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ChurrasTrinca.Domain.Entities.LoginEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Login");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "queroChurras@trinca.com",
                            Name = "Thomaz",
                            Password = "trinca123"
                        });
                });

            modelBuilder.Entity("ChurrasTrica.Domain.Entities.UserEntity", b =>
                {
                    b.HasOne("ChurrasTrica.Domain.Entities.ChurrasEntity", "Churras")
                        .WithMany("Participants")
                        .HasForeignKey("ChurrasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Churras");
                });

            modelBuilder.Entity("ChurrasTrica.Domain.Entities.ChurrasEntity", b =>
                {
                    b.Navigation("Participants");
                });
#pragma warning restore 612, 618
        }
    }
}
